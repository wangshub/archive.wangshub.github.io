<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>code on 🍉 神奇的战士</title><link>https://wangshub.github.io/categories/code/</link><description>Recent content in code on 🍉 神奇的战士</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Thu, 20 Jul 2017 22:22:06 +0000</lastBuildDate><atom:link href="https://wangshub.github.io/categories/code/index.xml" rel="self" type="application/rss+xml"/><item><title>python mail sender</title><link>https://wangshub.github.io/posts/python-mail-sender/</link><pubDate>Thu, 20 Jul 2017 22:22:06 +0000</pubDate><guid>https://wangshub.github.io/posts/python-mail-sender/</guid><description>python 发送邮件 配置服务器和邮箱 mail_info.py mail_host = &amp;#39;smtp.yeah.net&amp;#39; mail_user = &amp;#39;mail_name&amp;#39; mail_pass = &amp;#39;mail_password&amp;#39; sender = &amp;#39;mail_name@yeah.net&amp;#39; receivers = [&amp;#39;target@mail.com&amp;#39;] 发送邮件 mail_trans.py from .mail_info import * import smtplib from email.mime.text import MIMEText def mail_text_send(title, text): message = MIMEText(text, &amp;#39;plain&amp;#39;, &amp;#39;utf-8&amp;#39;) message[&amp;#39;Subject&amp;#39;] = title message[&amp;#39;From&amp;#39;] = sender message[&amp;#39;To&amp;#39;] = receivers[0] try: smtpObj = smtplib.SMTP() # connect host smtpObj.connect(mail_host, 25)</description></item><item><title>使用python备份博客图床图片</title><link>https://wangshub.github.io/posts/use-python-to-backup-markdown-images/</link><pubDate>Mon, 05 Jun 2017 23:09:29 +0000</pubDate><guid>https://wangshub.github.io/posts/use-python-to-backup-markdown-images/</guid><description>说明 最近在写markdown文档的过程中,经常需要插入一些图片.因为托管博客的服务器空间有限,所以上传图片到图床再插入到markdown中.</description></item><item><title>python 数据结构之二叉搜索树</title><link>https://wangshub.github.io/posts/python-data-structure-bst/</link><pubDate>Mon, 29 May 2017 23:06:12 +0000</pubDate><guid>https://wangshub.github.io/posts/python-data-structure-bst/</guid><description>二叉搜索树定义 一颗二叉搜索树是以二叉树来组织的,每个节点除了 Key 还包括 左孩子, 右孩子, 父节点 等信息. BST满足限制条件: 对于任意节点的X,他的</description></item><item><title>python的webrtc库实现语音端点检测</title><link>https://wangshub.github.io/posts/python-vad/</link><pubDate>Thu, 25 May 2017 21:47:56 +0000</pubDate><guid>https://wangshub.github.io/posts/python-vad/</guid><description>&lt;p>刚刚搭了博客&lt;a href="thinkhard.tech">thinkhard.tech&lt;/a>,欢迎踩踩~&lt;/p>
&lt;h2 id="引言">引言&lt;/h2>
&lt;p>语音端点检测最早应用于电话传输和检测系统当中,用于通信信道的时间分配,提高传输线路的利用效率.端点检测属于语音处理系统的前端操作,在语音检测领域意义重大.&lt;br>
但是目前的语音端点检测,尤其是检测 &lt;em>人声&lt;/em> 开始和结束的端点始终是属于技术难点,各家公司始终处于 &lt;strong>能判断&lt;/strong>,但是不敢保证 &lt;strong>判别准确性&lt;/strong> 的阶段.&lt;br>
&lt;img src="https://ooo.0o0.ooo/2017/05/25/5926ed7fcc2b3.png" alt="Screenshot from 2017-05-25 22-42-50.png"> &lt;br>
现在基于云端语义库的聊天机器人层出不穷,其中最著名的当属amazon的 &lt;strong>Alexa/Echo&lt;/strong> 智能音箱.&lt;br>
&lt;img src="https://ooo.0o0.ooo/2017/05/25/5926ee0cbc85b.jpg" alt="timg.jpg">&lt;/p>
&lt;p>国内如雨后春笋般出现了各种搭载语音聊天的智能音箱(如前几天在知乎上广告的若琪机器人)和各类智能机器人产品.国内语音服务提供商主要面对中文语音服务,由于语音不像图像有分辨率等等较为客观的指标,很多时候凭主观判断,所以较难判断各家语音识别和合成技术的好坏.但是我个人认为,国内的中文语音服务和国外的英文语音服务,在某些方面已经有超越的趋势. &lt;br>
&lt;img src="https://ooo.0o0.ooo/2017/05/25/5926f2220cae2.jpg" alt="timg (1).jpg">&lt;/p>
&lt;p>通常搭建机器人聊天系统主要包括以下三个方面:&lt;/p>
&lt;ul>
&lt;li>语音转文字(ASR/STT)&lt;/li>
&lt;li>语义内容(NLU/NLP)&lt;/li>
&lt;li>文字转语音(TTS)&lt;/li>
&lt;/ul>
&lt;h2 id="语音转文字asrstt">语音转文字(ASR/STT)&lt;/h2>
&lt;p>在将语音传给云端API之前,是本地前端的语音采集,这部分主要包括如下几个方面:&lt;/p>
&lt;ul>
&lt;li>麦克风降噪&lt;/li>
&lt;li>声源定位&lt;/li>
&lt;li>回声消除&lt;/li>
&lt;li>唤醒词&lt;/li>
&lt;li>语音端点检测&lt;/li>
&lt;li>音频格式压缩&lt;/li>
&lt;/ul></description></item></channel></rss>