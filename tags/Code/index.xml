<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Code on 🍉 神奇的战士</title>
    <link>https://wangshub.github.io/tags/code/</link>
    <description>Recent content in Code on 🍉 神奇的战士</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 13 Jun 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://wangshub.github.io/tags/code/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>两种硬件编程的风格：离线下载和在线交互</title>
      <link>https://wangshub.github.io/posts/about-interpreter/</link>
      <pubDate>Thu, 13 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://wangshub.github.io/posts/about-interpreter/</guid>
      <description>两种硬件编程的风格：离线下载和在线交互 少儿编程教育+智能硬件似乎是天生的一对，二者的结合很容易产生 1 + 1 &amp;gt; 2 的双赢局面。不管是在线编程教育企</description>
    </item>
    
    <item>
      <title>在GitHub上看到过的最有意思的项目</title>
      <link>https://wangshub.github.io/posts/%E5%9C%A8github%E4%B8%8A%E7%9C%8B%E5%88%B0%E8%BF%87%E7%9A%84%E6%9C%80%E6%9C%89%E6%84%8F%E6%80%9D%E7%9A%84%E9%A1%B9%E7%9B%AE/</link>
      <pubDate>Mon, 18 Feb 2019 15:02:53 +0000</pubDate>
      
      <guid>https://wangshub.github.io/posts/%E5%9C%A8github%E4%B8%8A%E7%9C%8B%E5%88%B0%E8%BF%87%E7%9A%84%E6%9C%80%E6%9C%89%E6%84%8F%E6%80%9D%E7%9A%84%E9%A1%B9%E7%9B%AE/</guid>
      <description>在GitHub上看到过的最有意思的项目 键盘听声识键 地址：ggerganov/kbd-audio 通过麦克风录取键盘的敲击声，判断你按下的</description>
    </item>
    
    <item>
      <title>python mail sender</title>
      <link>https://wangshub.github.io/posts/python-mail-sender/</link>
      <pubDate>Thu, 20 Jul 2017 22:22:06 +0000</pubDate>
      
      <guid>https://wangshub.github.io/posts/python-mail-sender/</guid>
      <description>python 发送邮件 配置服务器和邮箱 mail_info.py mail_host = &amp;#39;smtp.yeah.net&amp;#39; mail_user = &amp;#39;mail_name&amp;#39; mail_pass = &amp;#39;mail_password&amp;#39; sender = &amp;#39;mail_name@yeah.net&amp;#39; receivers = [&amp;#39;target@mail.com&amp;#39;] 发送邮件 mail_trans.py from .mail_info import * import smtplib from email.mime.text import MIMEText def mail_text_send(title, text): message = MIMEText(text, &amp;#39;plain&amp;#39;, &amp;#39;utf-8&amp;#39;) message[&amp;#39;Subject&amp;#39;] = title message[&amp;#39;From&amp;#39;] = sender message[&amp;#39;To&amp;#39;] = receivers[0] try: smtpObj = smtplib.SMTP() # connect host smtpObj.connect(mail_host, 25)</description>
    </item>
    
    <item>
      <title>使用python备份博客图床图片</title>
      <link>https://wangshub.github.io/posts/use-python-to-backup-markdown-images/</link>
      <pubDate>Mon, 05 Jun 2017 23:09:29 +0000</pubDate>
      
      <guid>https://wangshub.github.io/posts/use-python-to-backup-markdown-images/</guid>
      <description>说明 最近在写markdown文档的过程中,经常需要插入一些图片.因为托管博客的服务器空间有限,所以上传图片到图床再插入到markdown中.</description>
    </item>
    
    <item>
      <title>python 数据结构之二叉搜索树</title>
      <link>https://wangshub.github.io/posts/python-data-structure-bst/</link>
      <pubDate>Mon, 29 May 2017 23:06:12 +0000</pubDate>
      
      <guid>https://wangshub.github.io/posts/python-data-structure-bst/</guid>
      <description>二叉搜索树定义 一颗二叉搜索树是以二叉树来组织的,每个节点除了 Key 还包括 左孩子, 右孩子, 父节点 等信息. BST满足限制条件: 对于任意节点的X,他的</description>
    </item>
    
    <item>
      <title>python的webrtc库实现语音端点检测</title>
      <link>https://wangshub.github.io/posts/python-vad/</link>
      <pubDate>Thu, 25 May 2017 21:47:56 +0000</pubDate>
      
      <guid>https://wangshub.github.io/posts/python-vad/</guid>
      <description>&lt;p&gt;刚刚搭了博客&lt;a href=&#34;thinkhard.tech&#34;&gt;thinkhard.tech&lt;/a&gt;,欢迎踩踩~&lt;/p&gt;
&lt;h2 id=&#34;引言&#34;&gt;引言&lt;/h2&gt;
&lt;p&gt;语音端点检测最早应用于电话传输和检测系统当中,用于通信信道的时间分配,提高传输线路的利用效率.端点检测属于语音处理系统的前端操作,在语音检测领域意义重大.&lt;br&gt;
但是目前的语音端点检测,尤其是检测 &lt;em&gt;人声&lt;/em&gt; 开始和结束的端点始终是属于技术难点,各家公司始终处于 &lt;strong&gt;能判断&lt;/strong&gt;,但是不敢保证 &lt;strong&gt;判别准确性&lt;/strong&gt; 的阶段.&lt;br&gt;
&lt;img src=&#34;https://ooo.0o0.ooo/2017/05/25/5926ed7fcc2b3.png&#34; alt=&#34;Screenshot from 2017-05-25 22-42-50.png&#34;&gt; &lt;br&gt;
现在基于云端语义库的聊天机器人层出不穷,其中最著名的当属amazon的 &lt;strong&gt;Alexa/Echo&lt;/strong&gt; 智能音箱.&lt;br&gt;
&lt;img src=&#34;https://ooo.0o0.ooo/2017/05/25/5926ee0cbc85b.jpg&#34; alt=&#34;timg.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;国内如雨后春笋般出现了各种搭载语音聊天的智能音箱(如前几天在知乎上广告的若琪机器人)和各类智能机器人产品.国内语音服务提供商主要面对中文语音服务,由于语音不像图像有分辨率等等较为客观的指标,很多时候凭主观判断,所以较难判断各家语音识别和合成技术的好坏.但是我个人认为,国内的中文语音服务和国外的英文语音服务,在某些方面已经有超越的趋势. &lt;br&gt;
&lt;img src=&#34;https://ooo.0o0.ooo/2017/05/25/5926f2220cae2.jpg&#34; alt=&#34;timg (1).jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;通常搭建机器人聊天系统主要包括以下三个方面:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语音转文字(ASR/STT)&lt;/li&gt;
&lt;li&gt;语义内容(NLU/NLP)&lt;/li&gt;
&lt;li&gt;文字转语音(TTS)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;语音转文字asrstt&#34;&gt;语音转文字(ASR/STT)&lt;/h2&gt;
&lt;p&gt;在将语音传给云端API之前,是本地前端的语音采集,这部分主要包括如下几个方面:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;麦克风降噪&lt;/li&gt;
&lt;li&gt;声源定位&lt;/li&gt;
&lt;li&gt;回声消除&lt;/li&gt;
&lt;li&gt;唤醒词&lt;/li&gt;
&lt;li&gt;语音端点检测&lt;/li&gt;
&lt;li&gt;音频格式压缩&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Cmake 模板</title>
      <link>https://wangshub.github.io/posts/cmake-tutorial/</link>
      <pubDate>Thu, 25 May 2017 00:03:34 +0000</pubDate>
      
      <guid>https://wangshub.github.io/posts/cmake-tutorial/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://ooo.0o0.ooo/2017/05/25/5925af646160e.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
